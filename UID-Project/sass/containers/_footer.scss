footer {
	position: relative;
	left: 0;
	top: 0;
	width: 100%;
	height: auto;
	padding: 0;
	display: block;
	box-sizing: border-box;
	max-width: pxToRem($pageWidth);
	margin: auto;
	text-align: left;

	nav {

		text-align: left;
		@media (min-width: $bp-desktop) {
			order: 1;
		}

		ul {
			@include listNoStyle();

			li {
				margin: 0 auto pxToRem(8px);

				@media (min-width: $bp-desktop) {
					margin: 0 0 pxToRem(20px) auto;
				}

				a {
					@include bareLink();
					@include font(footerNav);
					letter-spacing: pxToRem(1.5px);

					@media (min-width: $bp-desktop) {
						letter-spacing: pxToRem(1.9px);
					}
				}
			}
		}
	}

	p {
		@include font(footerCopy);
		text-align: left;
		margin: 0 auto;

		@media (min-width: $bp-desktop) {
			order: 3;
			flex-basis: 100%;
		}
	}

	.theme-default {
		padding: getPadding() getPadding() pxToRem(60px);

		@media (min-width: $bp-desktop) {
			padding: getPadding() getPadding(desktop);
			display: flex;
			justify-content: space-between;
			flex-direction: row-reverse;
			flex-wrap: nowrap;
			flex-direction: row;
			align-items: flex-start;
		}
	}
}

.social {

	position: relative;
	left: 0;
	top: 0;
	width: auto;
	height: auto;
	padding: 0 0 getPadding();
	margin: 0 0 getPadding();
	text-align: center;
	border-bottom: pxToRem(1px) solid getUiColour(text, default);
	display: flex;
	justify-content: space-between;
	flex-direction: row;
	align-content: flex-start;
	flex-wrap: nowrap;
	font-size: 0;
	max-width: pxToRem(320px);

	@media (min-width: $bp-desktop) {
		order: 2;
		padding: 0 0 pxToRem(16px);
		margin: 0;
		width: pxToRem(320px);
	}

	a {
		position: relative;
		display: inline-block;
		width: pxToRem(32px);
		height: pxToRem(32px);
		margin: auto;
		padding: 0;
		border: pxToRem(2px) solid getUiColour(text, default);
		border-radius: pxToRem(72px);

		@media (min-width: $bp-desktop) {
			width: pxToRem($tapSize);
			height: pxToRem($tapSize);
		}

		svg {
			position: absolute;
			left: 20%;
			top: 20%;
			width: 60%;
			height: 60%;
			display: block;

			use {
				fill: getUiColour(text, default);
			}
		}
	}
}
