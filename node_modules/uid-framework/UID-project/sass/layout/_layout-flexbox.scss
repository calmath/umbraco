/* ==========================================================================
Flexbox layout
========================================================================== */



/* ***********************
COLUMNS
*********************** */

$glp_col-1: (100% / 12);
$glp_col-2: ($glp_col-1 * 2);
$glp_col-3: ($glp_col-1 * 3);
$glp_col-4: ($glp_col-1 * 4);
$glp_col-5: ($glp_col-1 * 5);
$glp_col-6: ($glp_col-1 * 6);
$glp_col-7: ($glp_col-1 * 7);
$glp_col-8: ($glp_col-1 * 8);
$glp_col-9: ($glp_col-1 * 9);
$glp_col-10: ($glp_col-1 * 10);
$glp_col-11: ($glp_col-1 * 11);
$glp_col-12: 100%;


/* ***********************
GRID STYLE
************************ */

/* Grid options */
.grid {

	&.grid_noEqualHeight > [class*="col-"] {
		display: block;
	}

	/* Remove gutters */
	&.grid_noGutter {
		margin: 0;

		> [class*="col"] {
			padding: 0;
		}

		@media screen and(max-width: $bp-tablet-small-down) {
			//remove the bottom margin from the first component (mobile)
			> [class^="col-"]:first-child >* {
				margin-bottom: 0;
			}
		}
	}

	/* No Wrapping */
	&.grid_noWrap {
		flex-wrap: nowrap;
	}

	/* Horizontal alignment */
	&.grid_center {
		justify-content: center;
	}

	&.grid_right {
		justify-content: flex-end;
		align-self: flex-end;
		margin-left: auto;
	}


	/* Vertical alignment */
	&.grid_top {
		align-items: flex-start;
	}

	&.grid_middle {
		align-items: center;
	}

	&.grid_bottom {
		align-items: flex-end;
	}

	/* Reverse orders */
	&.grid_reverse {
		flex-direction: row-reverse;
	}

	/* Columns top to bottom */
	&.grid_column {
		flex-direction: column;

		> [class*="col-"] {
			flex-basis: auto;
		}
	}

	/* Columns reverse order */
	&.grid_column_reverse {
		flex-direction: column-reverse;
	}

	/* Spaces between cols */
	&.grid_spaceBetween {
		justify-content: space-between;
	}

	/* Spaces around cols */
	&.grid_spaceAround {
		justify-content: space-around;
	}

	// Edge to edge - left half wraper
	&.grid_left-wrap {
		justify-content: flex-end;

		& > [class*="col-"]:first-child {
			max-width: $page-width / 2;
			margin-left: 10px;
			padding-right: 20px;

			@media all and (min-width: $bp-tablet-small) {
				max-width: calc(50% - 10px);
				padding-right: 0;
			}

			@media all and (min-width: $bp-tablet) {
				max-width: calc(50% - 20px);
				margin-left: 20px;
			}

			@media all and (min-width: $bp-desktop) {
				max-width: calc(50% - 43px);
				margin-left: 43px;
				padding-left: 0;
			}

			@media all and (min-width: 1370px) {
				max-width: ($page-width - 60px) / 2;
				margin-left: 43px;
				padding-left: 0;
			}
		}
	}
}


/************************
SIZES
*************************/

[class^="grid"] {
	display: flex;
	flex-flow: row wrap;
	margin: 0 (-$gl-gutter / 3);

	> [class*="col-"] {
		padding: 0 ($gl-gutter / 3);
		flex-basis: $glp_col-12;
		max-width: $glp_col-12;

		// Equal Height (made this as default): 
		display: flex;

		> * {
			flex: 1 1 auto;
		}
	}

	@media all and(min-width: $bp-desktop) {
		margin: 0 (-$gl-gutter / 2);

		[class*="col-"] {
			padding: 0 ($gl-gutter / 2);
		}
	}

	@media screen and(min-width: $bp-tablet-small) {
		> .col-9,
		> .col-8,
		> .col-7,
		> .col-6,
		> .col-5,
		> .col-4,
		> .col-3 {
			flex-basis: $glp_col-6;
			max-width: $glp_col-6;
		}

		> .col-10 {
			flex-basis: $glp_col-8;
			max-width: $glp_col-8;
		}

		> .col-2 {
			flex-basis: $glp_col-4;
			max-width: $glp_col-4;
		}

		> .col-1 {
			flex-basis: $glp_col-3;
			max-width: $glp_col-3;
		}

		> .col-11 {
			flex-basis: $glp_col-9;
			max-width: $glp_col-9;
		}
	}

	@media screen and(min-width: $bp-tablet) {
		> .col-8 {
			flex-basis: $glp_col-8;
			max-width: $glp_col-8;
		}

		> .col-7 {
			flex-basis: $glp_col-7;
			max-width: $glp_col-7;
		}

		> .col-5 {
			flex-basis: $glp_col-5;
			max-width: $glp_col-5;
		}

		> .col-4 {
			flex-basis: $glp_col-4;
			max-width: $glp_col-4;
		}
	}

	@media all and(min-width: $bp-desktop) {
		> .col-2 {
			flex-basis: $glp_col-2;
			max-width: $glp_col-2;
		}

		> .col-3 {
			flex-basis: $glp_col-3;
			max-width: $glp_col-3;
		}

		> .col-10 {
			flex-basis: $glp_col-10;
			max-width: $glp_col-10;
		}

		> .col-9 {
			flex-basis: $glp_col-9;
			max-width: $glp_col-9;
		}

		> .col-1 {
			flex-basis: $glp_col-1;
			max-width: $glp_col-1;
		}

		> .col-11 {
			flex-basis: $glp_col-11;
			max-width: $glp_col-11;
		}
	}
}



//----------------------------------*\
// Flexbox nesting
//----------------------------------*/
.section .section .section-wrap {
	padding: 0;
}

//all nested block 100%
[class^="col-3"],
[class^="col-4"],
[class^="col-5"],
[class^="col-6"] {
	.grid [class^="col-"] {
		flex-basis: 100%;
		max-width: 100%;
	}
}

@media screen and(max-width: $bp-desktop-down) {
	[class^="col-8"],
	[class^="col-9"] {
		.grid [class^="col-"] {
			flex-basis: 100%;
			max-width: 100%;
		}
	}
}





//----------------------------------*\
// Flexbox fallback
//----------------------------------*/
.no-flexbox {

	.grid {
		overflow: hidden;
	}

	[class^="col"] {
		float: left;
	}

	@for $i from 1 through 12 {
		.col-#{$i} {
			width: (100% / 12) * $i;
		}
	}

	//No block nesting allowed, 
	.grid .grid [class^="col"] {
		float: none;
		width: 100%;
	}
}
