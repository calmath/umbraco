@using AutoMapper.Internal
@using Newtonsoft.Json.Linq
@using Umbraco.Web.Templates
@inherits UmbracoViewPage<Lecoati.LeBlender.Extension.Models.LeBlenderModel>

@{
    var item = Model.Items.FirstOrDefault();
    if (item != null)
    {
        var theme = string.Empty;
        if (item.GetValue<string>("theme").ToNullSafeString() != null)
        {
            var jArray = JArray.Parse(item.GetValue<string>("theme").ToNullSafeString());
            if (!string.IsNullOrWhiteSpace(jArray.First.Value<string>()))
            {
                int intValue;
                var value = jArray.First.ToString();
                if (int.TryParse(value, out intValue))
                {
                    theme = Umbraco.GetPreValueAsString(intValue);
                }
            }
        }


        var linkSrc = string.Empty;
        var linkTitle = string.Empty;

        var link = item.GetValue<IPublishedContent>("link");
        if (link != null)
        {
            linkSrc = link.Url;
            linkTitle = link.Name;
        }

        <div class="theme-brand1">

            <a href="@linkSrc" title="@linkTitle">
                <div class="bgImageBlock">
                    <div class="bgImageBlock_img bgLight">
                        @{
                            var content = item.GetValue<IPublishedContent>("image");
                            if (content != null)
                            {
                                var image = content.Url;
                                if (!string.IsNullOrWhiteSpace(image))
                                {
                                    <img src="@image" alt="@content.Name">
                                }
                            }
                        }



                    </div>
                    <div class="bgImageBlock_title">
                        <h3 class="bottomBorder">@item.GetValue("heading")</h3>
                        <div class="borderBottomAnimate"></div>
                    </div>
                    <div class="bgImageBlock_text">
                        @item.GetValue("text")
                    </div>
                </div>
            </a>
        </div>

    }
}


